// docs: otomatis dipake kalau pake prisma di root folder prisma/schema.prisma,
// setelah buat prisma client dan run "npx prisma generate" + "npx db push"
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CategoryJob {
  id                    String      @id @default(cuid())
  name                  String
  usedJobs              Job[]
}

model Industry {
  id                    String      @id @default(cuid())
  name                  String
}

model Company {
  id                    String      @id @default(cuid())
  name                  String
  password              String
  email                 String      @unique
  companySocialMedia    CompanySocialMedia[]
  companyTeam           CompanyTeam[]
  companyOverView       CompanyOverview[]
  jobs                  Job[]
}

model CompanySocialMedia {
  id                    String      @id @default(cuid())
  instagram             String
  twitter               String
  facebook              String
  linkedin              String
  youtube               String
  companyId             String?
  company               Company?    @relation(fields: [companyId], references: [id])
}

model CompanyTeam {
  id                    String      @id @default(cuid())
  name                  String
  position              String
  instagram             String
  linkedin              String
  companyId             String?
  company               Company?    @relation(fields: [companyId], references: [id])
}

model CompanyOverview {
  id                    String      @id @default(cuid())
  image                 String
  name                  String
  website               String
  location              String
  workforceSize         String
  industry              String
  foundedDate           DateTime
  techStacks            String[]
  description           String
  companyId             String?
  company               Company?    @relation(fields: [companyId], references: [id])
}

model Job {
  id                    String      @id @default(cuid())
  roles                 String
  datePosted            DateTime    @default(now())
  dueDate               DateTime
  jobType               String
  applicants            Int
  needs                 Int
  salaryFrom            String
  salaryTo              String
  requiredSkills        String[]
  description           String
  responsibilities      String
  whoYouAre             String
  niceToHaves           String
  benefits              Json
  categoryId            String?
  companyId             String?
  categoryJob           CategoryJob? @relation(fields: [categoryId], references: [id])
  company               Company?     @relation(fields: [companyId], references: [id])
  applicantsData        Applicant[]
}

model User {
  id                    String      @id @default(cuid())
  name                  String
  password              String
  email                 String      @unique
  applicantsData        Applicant[]
}

model Applicant {
  id                    String      @id @default(cuid())
  userId                String?
  user                  User?       @relation(fields: [userId], references: [id])
  jobId                 String?
  job                   Job?        @relation(fields: [jobId], references: [id])
  previousJobTitle      String
  phone                 String
  linkedin              String
  portfolio             String
  coverLetter           String
  resume                String
}